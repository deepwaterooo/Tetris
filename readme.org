#+latex_class: cn-article
#+latex_header: \lstset{language=c++,numbers=left,numberstyle=\tiny,basicstyle=\ttfamily\small,tabsize=4,frame=none,escapeinside=``,extendedchars=false,keywordstyle=\color{blue!70},commentstyle=\color{red!55!green!55!blue!55!},rulesepcolor=\color{red!20!green!20!blue!20!}}
#+title: Tetris - Basic Implementation Practice for Android
#+author: deepwaterooo

* Upgrading versions, pretty good
** 3d tetris
*** Game Requirement
**** Model
- So far draw, rotating has no issues. Just one more step to think after active block has rotated (90, 180, 270, 360 or whatever), after I droped, how am I going to put the correct element into board[i][j][k] matrix. I need rotation matrix calculation functions here for me to update my board. Data structure design I think it will work.
  - Frame, Grid, and Cube needs to be design/packed better so that the rendering and rotations can be controlled slightly more organized.
  - Need to find a good/efficient way to manage and load all the sever different textures.
- So far the only part that I want more research is on (Frame + Grid) vs current active block rotations, so that I could rotate them according when needed, (do I really need to use ray picking for identifying them) will do more online research on this part. I could implement ray picking, just feel 2d point doesn't necessarily fall into 3d frame. (which means outside 5*5*10 gestures to rotate frame, inside 5*5*10 frame rotate current active block, but I want more research to confirm if this is the best solution).
**** Threads
- As you can feel once my mind is not clear I would make mistakes here or there. Threads/Runnables are useful but for opengl rendering because it is hardware accelerated rendering, unfortunately Threads/Runnables won't help too much for redering here. But I will try to pack these Threads/Runnables into my 2d tetris when this one is done. (think about it: if the thread calling opengl calls *setCurrentContext*. need to search more on opengl redering and thread for this module a little bit more. While concepts/ideas are right though. App developped in this age without threads applied I would feel shamed to call it a mobile app.) Need think about this part.
- Threads for textures: 先解释下 glTexImage2d，它会将数据从 CPU 内存通过 PCIE 上传到 GPU 内存。不使用 PBO 时它是一个阻塞 CPU 的函数，数据量大时肯定会卡。解决方法是在子线程也创建一个 context，同时 share 资源给渲染的主线程。 
  - *share\_context:* Specifies another EGL rendering context with which to share data, as defined by the client API corresponding to the contexts. Data is also shared with all other contexts with which share_context shares data. EGL_NO_CONTEXT indicates that no sharing is to take place.

    #+BEGIN_SRC c++
EGLContext eglCreateContext(EGLDisplay display, EGLConfig config, EGLContext share_context, EGLint const * attrib_list);
    #+END_SRC
  - 科普下 opengl 的线程不安全，它存了很多东西在线程的局部空间中，即 thread-local storage (TLS)。在没有绑定过 context （eglMakeCurrent / wglMakeCurrent）的线程中调用 opengl 函数是没有意义的，因为这个线程中嘛都没有。而一个 context 在同一时间只能被一个线程绑定。
  - 2种方法：(1) 2个线程, 1个OpenGL context，2个线程一个做渲染，一个做逻辑; (2), 2个线程2个context，主渲染线程维护状态，提交dc；辅助渲染线程做vb，texture的数据copy，shader的编译等。GPU会在两个context之间同步，有隐性开销. 其实单线程下规划好资源依赖应该可以做到不卡的. 
- 

**** Gestures
- Includes MotionEvent for single finger, double or three fingers, use pointers, pack different gestures tasks into different runnables. gestures should be easy to use and apply. Look back on DrawingFun fun app developped during Fall 2014, fragments, threads, view/invalidates were all so easy, don't Understand why during those days I could only make them work without really/deeply understood how they works that way.
  - In total about 15 gestions that I could think so far
  - 4 gestures for frame rotation around Z and x || (y = 2.5, z = 5) axis clockwise && anti- for single finger touch (left, right, up, down).
  - 4 gestures for single finger active block moves up/dow x / y directions (left, right, up, down).
  - 6 gestures for double or triple fingers touch for acitve block rotates around x / y / z clock/anti-clockwise (left, right, up, down, 2 scrolls).
  - Double tap for fast dropping, but want to extend fast dropping gestures by applying velocities detection if I could figure those velocities out when the game flow is basically done.
**** Layout
- The main activity game view allow NO buttons; If there are too many gestures applied, could include a instruction view for gesture guide. Could have slightly interesting layout for scores, or any effects that I could come up with later on (so far has not worried or do any research about this part yet).
**** Others
- Minors features that I could skip if I don't have time:
- After the bridgeing Cube app, texture is not any problems for me (just need to figure out a simple easier way to build an App manager (or simplier shaders) of my own, and manager the resources). Would borrow textures (with sounds) materials from glar3d and apply textures on my 3d game after majority functionalities are finished.
- Come back to Cube app to make the mediaplayer for video work first, and then apply technic on Mediaplayer back to 3d for sounds besides the background sound, if I feel I have such a need with plants && zombies Unity game waiting for me.
- Expect the 3d game (videoable version) to be uploaded onto youtube by 5/17/2016. Considering debugging time and all other minor difficulties that I might meet later on, I will have to work hard on this one (Apparently I have not been able to finish by today then).

*** Status Update
- On the texture part for 3d, has NOT been able to compile yet, will continue work on it tomorrow. 
-
- On ray-picking, will try to temporarily apply it here to test and so that I could Understand this picking better, but I do think that I will need be scale(zoom out/in the frame so it will be more convenient to control current activeBlock) the frame to make it easy to use. But after I have learned all the technology I may not want to work on making it perfect any more. On textures loading. will continue with ray-picking in the evening.
- need to set eye position better so that the (Frame + Grid) layout can be at the position that I want for the 3d game.
- I want yellow grids, together with white background, red-x yellow-y, but I fail get such effect. Currently using black grid, but I will change it to be better looking.
- Emacs is such a powerful tool for me for coding considering and accepting the facts that occasional it would produce some minor troubles for me so that I would have to google for solutions. This morning the parenthesis don't autopair for () [] {} for java-mode, after having googled for few minutes, I have used and trust autopair for so long and realized actually sometimes he gets tired, and once I close and restart it, he works perfectly. *I am looking forward to the day that my beloved cousin would be able to help and guide me with emacs debugging.*
- 3d tetris layout structure:

  [[./pic/Screenshot_2016-05-12-12-06-42.png]]
- a video for this Tetris game can be directly watched at https://www.youtube.com/watch?v=Ht4NOrEUtFk
- A video for the previous DrawingFun Android App can be watched at https://www.youtube.com/watch?v=YV78Tk5--5M , or by searching *deepwaterooo Wang*.

** folders
- lame2d: the very first version of the game.
- 2d: SurfaceView redering 2d Implementation.
- 3d: will work on a simple opengl 3d version first. Currently working on this one, will spend a few of following days on this one as well.
- glar3d: upgraded opengl 3d version adapted from tetrisglar app with textures and music, and real 3d instead of any pseudo one, will implement this one when simple 3d version is done. (After having understood texture and lights better, tried to debug this one for a while, but still complicated design and layout still make this one to some extend difficult for me for now.)

* References
** youtube designs
- shader: http://blog.csdn.net/tom_221x/article/details/38458021
- 旋转三角形 http://www.hanshuliang.com/?post=6
- fancy effect: http://m.oschina.net/blog/147033
- http://www.cnblogs.com/liangliangh/p/4089582.html
- texture http://learnopengl.com/code_viewer.php?code=getting-started/coordinate_systems&type=fragment
- github gestures explain details: http://code.almeros.com/android-multitouch-gesture-detectors#.VzTg4BUrI9U
- shader abstract: http://www.cnblogs.com/younghao/p/5141290.html
- shader thread https://www.zhihu.com/question/28016196
- Activity http://blog.csdn.net/luoshengyang/article/details/6685853 a series
- Android线程管理 http://www.cnblogs.com/younghao/p/5116819.html
- android share context http://www.it610.com/article/3866383.htm
- three state rendering https://www.youtube.com/watch?v=t5EeXKGSQUw
- http://blog.slapware.eu/game-engine/programming/multithreaded-renderloop-part1/
- https://www.hongweipeng.com/index.php/archives/581/
- https://github.com/lp0/slf4j-android/tree/master/src/main/java/eu/lp0/slf4j/android
- http://www.cnblogs.com/younghao/p/5141290.html
- http://mobile.51cto.com/aengine-437172.htm
- http://www.jianshu.com/p/291ff6ddc164
- shaders: https://github.com/learnopengles/Learn-OpenGLES-Tutorials/blob/master/android/AndroidOpenGLESLessons/src/com/learnopengles/android/common/ShaderHelper.java
- 
- 
- 
- 
- 
- 
- 

** gestures
- 过程https://wizardforcel.gitbooks.io/w3school-android/content/62.html
- analyze with code https://github.com/CharonChui/AndroidNote/blob/master/Android%E5%8A%A0%E5%BC%BA/Android%20Touch%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E8%AF%A6%E8%A7%A3.md
- android MotionEvent 详解 pointers http://www.jianshu.com/p/0c863bbde8eb
- 图片过程详解http://ztelur.github.io/2016/02/04/%E5%9B%BE%E8%A7%A3Android%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92%E4%B9%8BView%E7%AF%87/ check github scrollview
- http://www.jianshu.com/p/293d0c2f56cb Android 绘制过程详解
- Track Velocity http://developer.android.com/intl/zh-cn/training/gestures/movement.html#velocity
- sample codes: https://gitlab.com/tgzzl/android-training-course-in-chinese/blob/0727674297209b5d89db01ee768da1db1ac6cea0/input/gestures/detector.md
- Drag and Drop http://developer.android.com/intl/zh-cn/guide/topics/ui/drag-drop.html
- 拖拽与缩放 http://hukai.me/android-training-course-in-chinese/input/gestures/scale.html 更加复杂的缩放示例
- 滚动手势动画 http://hukai.me/android-training-course-in-chinese/input/gestures/scroll.html
- 响应触摸事件 http://hukai.me/android-training-course-in-chinese/graphics/opengl/touch.html
- 多线程操作 http://hukai.me/android-training-course-in-chinese/performance/multi-threads/index.html
- Android入门基础 http://hukai.me/android-training-course-in-chinese/basics/index.html
- example code Android 中实现图片平移、缩放、旋转同步进行 http://android.jobbole.com/82072/
- another ray picking: http://antongerdelan.net/opengl/raycasting.html
- opengl es rendering vs threads: http://imgtec.eetrend.com/blog/1883
- bash globstar ** http://smilejay.com/2013/10/enable-globstar-in-bash/
- 调试 http://gold.xitu.io/entry/56c5d052a34131005005f55e
- youtube gestures 定义：https://www.youtube.com/watch?v=ZJj-9HqRpDc
- GLSurfaceView http://hellosure.github.io/android/2015/06/01/android-glsurfaceview/
- handling touch thread & rendering threads http://stackoverflow.com/questions/5129580/android-glsurfaceview-renderer-is-interrupting-an-incomplete-touch-event
- http://www.learnopengles.com/listening-to-android-touch-events-and-acting-on-them/
- github 3d tetris reference https://github.com/kdomic/android-3d-tetris

** Activity.runOnUiThread()
- http://stackvoid.com/introduction-to-Message-Handler-in-Android/
- http://m.oschina.net/blog/97619
- AssetManager: http://m.jb51.net/article/57341.htm
- A 3d reference: https://github.com/kdomic/android-3d-tetris
** 3D design
- c++ version: https://github.com/matachi/tetris-cpp
- refer 6 http://www.oschina.net/question/614942_62370
- http://www.oschina.net/question/565065_67280
- triangle: http://stackoverflow.com/questions/9945321/triangle-opengl-in-android
- https://gist.github.com/SebastianJay/3316001
- 射线拾取： http://itdocument.com/479827008/
- 旋转及手势： http://vaero.blog.51cto.com/4350852/790620
- 2 http://vaero.blog.51cto.com/4350852/790637
- http://www.lai18.com/content/951343.html
- opengl选择与反馈： http://zhidao.baidu.com/question/496046750245095004.html
- http://wenku.baidu.com/view/58190d1efad6195f312ba6f7.html
- c++ http://blog.csdn.net/u010223072/article/details/45369075
- http://codercdy.com/2015/06/17/openglxue-xi-bi-ji-xuan-ze-he-fan-kui/
- https://books.google.com/books?id=u6EHM_OzaFQC&pg=PA1987&lpg=PA1987&dq=opengl%E9%80%89%E6%8B%A9%E4%B8%8E%E5%8F%8D%E9%A6%88&source=bl&ots=L9Y66QSEhu&sig=f1h_RadXRDFsa9L5IY430HGTG34&hl=en&sa=X&ved=0ahUKEwjA6vTRo_jLAhVH3mMKHQIXBxYQ6AEIPDAE#v=onepage&q=opengl%E9%80%89%E6%8B%A9%E4%B8%8E%E5%8F%8D%E9%A6%88&f=false
- c++ codes: http://dev.gameres.com/program/Visual/3D/Selection.htm
- 画线： c++ http://www.programgo.com/article/43724048060/
- draw line: http://www.linuxidc.com/Linux/2011-09/42307p3.htm
- http://stackoverflow.com/questions/9217702/open-gl-es-2-0-drawing-a-simple-line
- 距阵变换： http://www.cnblogs.com/caster99/p/4780984.html
- http://www.flakor.cn/2014-05-15-384.html
- shader util: http://blog.csdn.net/shulianghan/article/details/17020359
- 详解距阵变换：http://www.cnblogs.com/kesalin/archive/2012/12/06/3D_math.html
- http://mail.cfanz.cn/index.php?c=article&a=read&id=270244
- one example: http://www.apkbus.com/blog-99192-39498.html
- ex2 for shader matrix: http://www.voidcn.com/blog/peanut__love/article/p-2891341.html
- 西蒙iPhone-OpenGL ES 中文教程专题: http://www.cocoachina.com/special/2010/0126/404.html
- 运动： http://www.cocoachina.com/bbs/read.php?tid-7601-fpage-10.html
- 距阵： http://blog.csdn.net/wangdingqiaoit/article/details/39010077
- http://blog.csdn.net/popy007/article/details/5120158 UNV
- http://www.tqcto.com/article/mobile/23873.html eye
- http://blog.csdn.net/wangdingqiaoit/article/details/39937019
- https://developer.apple.com/library/ios/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/Introduction/Introduction.html
- http://blog.csdn.net/shulianghan/article/details/46680803
- rotation: http://stackoverflow.com/questions/13480043/opengl-es-android-matrix-transformations
- glsl example: http://cse.csusb.edu/tongyu/courses/cs520/notes/android-es2.php
- shader parser: http://stackoverflow.com/questions/19452240/opengl-glsl-void-parse-error-on-vertex-shader
- separate file: http://stackoverflow.com/questions/30345816/splitting-a-text-file-into-multiple-files-by-specific-character-sequence
** GLSurfaceView
- opengl: http://androidblog.reindustries.com/a-real-open-gl-es-2-0-2d-tutorial-part-1/
- Graphics architecture: https://source.android.com/devices/graphics/architecture.html
- http://stackoverflow.com/questions/5169338/android-deciding-between-surfaceview-and-opengl-glsurfaceview
- *引路蜂* better: http://blog.csdn.net/mapdigit/article/details/7526556
- 真正的3D图形： http://www.imobilebbs.com/wordpress/archives/1554
- a Cube: http://www.oschina.net/question/4873_28325
- modification: https://github.com/googleglass/gdk-apidemo-sample/blob/master/app/src/main/java/com/google/android/glass/sample/apidemo/opengl/Cube.java
- Android OpenGL ES 简明开发教程小结: http://www.imobilebbs.com/wordpress/archives/1583
- http://hellosure.github.io/android/2015/06/01/android-glsurfaceview/
- http://ju.outofmemory.cn/entry/172850
- 画图： http://www.mobile-open.com/2015/81568.html
- http://tangzm.com/blog/?p=20
- http://www.apkbus.com/blog-99192-39584.html
- onDrawFrame intro: http://www.jayway.com/2009/12/03/opengl-es-tutorial-for-android-part-i/
- failed: http://stackoverflow.com/questions/28711850/android-opengl-how-to-draw-a-rectangle
- onTouchEvent: http://blog.csdn.net/niu_gao/article/details/8673662
- volatile http://www.voidcn.com/blog/fanfanxiaozu/article/p-3668133.html
- http://mobile.51cto.com/aengine-437172.htm
- OpenGLES related: http://stackoverflow.com/questions/9945321/triangle-opengl-in-android
- OpenGL ES 2.0 Sample Code: http://androidbook.com/item/4254
- intros:详解 http://blog.csdn.net/niu_gao/article/details/7566297
- 画线： http://www.cnblogs.com/lhxin/archive/2012/06/01/2530828.html
- http://bbs.9ria.com/thread-201740-1-1.html
- http://imgtec.eetrend.com/blog/5078
- draw a ball http://shikezhi.com/html/2015/android_1022/561912.html
- for Board c++: http://www.jiancool.com/article/24471349949/
- possible? http://code1.okbase.net/codefile/CCFormatter.java_2015072733469_393.htm
- http://www.mobile-open.com/2015/80379.html
** eventQueue vs SurfaceView threads
- Deeper summary, android graphics architecture: http://hukai.me/android-deeper-graphics-architecture/
- 2 threads, load, read, http://blog.csdn.net/hellogv/article/details/5986835
** SurfaceView
- Surface runnable http://android.okhelp.cz/surfaceview-implements-runnable-android-code/
- Example: http://technicalsearch.iteye.com/blog/1967616
- http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2012/1201/656.html
- Event Queue: http://www.leestorm.com/post/17.html
- lockCanvas(Rect小区) http://blog.csdn.net/alexander_xfl/article/details/13000347
- example: http://fanli7.net/a/JAVAbiancheng/ANT/20120424/160203.html
- MotionEvent: http://android.jobbole.com/82072/
- surfaceview双缓冲： http://blog.csdn.net/cnbloger/article/details/7404485
- sth worth try: http://www.lxway.com/969295592.htm
- Dont Understand: http://blog.sina.com.cn/s/blog_5a6f39cf01012rtv.html
- tried: http://bbs.csdn.net/topics/370074255 drawBitmap 2 canvas
- slightly complicated: http://www.lxway.com/148606691.htm
- slightly complicated: http://www.lxway.com/186948856.htm
** gestures
- http://www.cnblogs.com/akira90/archive/2013/03/10/2952886.html
- Android 触摸手势基础 官方文档概览: http://www.lxway.com/445554926.htm
- 手势: http://wiki.jikexueyuan.com/project/material-design/patterns/gestures.html
- http://www.lxway.com/601620614.htm
- http://www.lxway.com/282219004.htm
- http://www.lxway.com/906451412.htm
- http://www.lxway.com/146619692.htm
- http://www.lxway.com/4420294641.htm
- http://www.lxway.com/155059816.htm
- http://www.lxway.com/4019928952.htm
- 例子： http://bbs.chinaunix.net/thread-3634477-1-1.html
- 例子： http://www.bestappsmarket.com/p/app?appId=1192877&title=tetris-%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97
- 例子： http://bbs.chinaunix.net/thread-3634477-1-1.html
- iTetris: http://searchapp.soft4fun.net/article/information/iTetris%20%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97/313319
- left right: http://www.jb51.net/article/77028.htm
- AI: http://www.cnblogs.com/youngshall/archive/2009/03/24/1420682.html
- 3/11/2016 Friday
- https://github.com/Almeros/android-gesture-detectors mac
- http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0211/2467.html
- http://www.hejun.biz/81.html
- http://www.jb51.net/article/38166.htm
- http://www.jb51.net/article/37717.htm
- http://mobile.51cto.com/aprogram-394841.htm
- TetrisBattle特殊轉入教學(Z S J L I)
  - https://www.youtube.com/watch?v=zW6Gp_7jl9I
- 推箱子： 第11章 Android游戏开发视频教程 益智游戏——推箱子
  - https://www.youtube.com/watch?v=glzxII1-P0A 2.5D
- 祖码游戏的设计与实现
